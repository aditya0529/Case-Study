def map_iot_dd_audit_to_security_hub(finding):
    """Create a Security Hub finding based on IoT Device Defender finding"""
    severity = finding['severity']
    resource_id = get_resource_identifier(finding)
    resource_type = get_sh_resource_type(finding)
    account_id = finding['accountId']
    region = finding['region']
    partition = finding['partition']
    check_name = finding['checkName']
    finding_id = f"arn:{partition}:iot-device-defender:{region}:{account_id}:audits/finding/{check_name}-{resource_id}"
    task_id = finding['taskId']
    audit_arn = finding['auditARN']
    record_state = RECORDSTATE_ACTIVE
    status = "FAILED"
    description = finding['reasonForNonCompliance']
    title = "IoT Device Defender: resource {} non compliant to {}".format(
        resource_id, check_name)
    d = datetime.datetime.utcnow()
    new_recorded_time = d.isoformat() + "Z"

    remediation_url = "https://console.aws.amazon.com/iot/home?region=" + \
        region+"#/dd/audit/"+task_id+"/"+check_name
    new_finding = {
        "SchemaVersion": "2018-10-08",
        "Id": finding_id,
        "ProductArn": f"arn:{partition}:securityhub:{region}:{account_id}:product/{account_id}/default",
        "GeneratorId": audit_arn,
        "AwsAccountId": account_id,
        "Compliance": {"Status": status},
        "Types": [
            f"{TYPE_PREFIX}/{check_name}"
        ],
        "CreatedAt": new_recorded_time,
        "UpdatedAt": new_recorded_time,
        "Severity": {
            "Label": severity
        },
        "Title": title,
        "Description": description,
        'Remediation': {
            'Recommendation': {
                'Text': 'For directions on how to fix this issue, start mitigation action in AWS IoT Device Defender console',
                'Url': remediation_url
            }
        },
        "ProductFields": {
            "ProviderName": "IoTDeviceDefender",
            "ProviderVersion": "1.0",
        },
        'Resources': [
            {
                'Id': resource_id,
                'Type': resource_type,
                'Partition': "aws",
                'Region': region
            }
        ],
        'Workflow': {'Status': 'NEW'},
        'RecordState': record_state
    }
    return new_finding
